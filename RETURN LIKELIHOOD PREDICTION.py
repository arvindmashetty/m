# -*- coding: utf-8 -*-
"""Copy of YBI PROJECT final.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BjkZp6pjtLoyVPgbmOFUdbQc6vVDVg6q
"""

import pandas as pd
df = pd.read_csv('/content/drive/MyDrive/ybi project files/machine learning with python/Copy of Return Likelihood Prediction for QuickCart.csv')
print(df.shape)
print(df.columns)
df.head()

df = df.dropna()
df = pd.get_dummies(df, drop_first=True)
df.head()

X = df.drop('Returned', axis=1)
y = df['Returned']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier()

model.fit(X_train, y_train)

from sklearn.metrics import classification_report, accuracy_score

y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))

import numpy as np

sample = X_test.iloc[0].values.reshape(1, -1)
print("Prediction:", model.predict(sample))

print(df.columns)

product_type_columns = [col for col in X_test.columns if col.startswith('ProductType_')]
product_return_rate = {}

# Add the predicted return values to X_test
X_test['Predicted_Return'] = y_pred

for col in product_type_columns:
    # Calculate the mean of 'Predicted_Return' for each product type
    product_return_rate[col.replace('ProductType_', '')] = X_test[X_test[col] == True]['Predicted_Return'].mean()

print("Predicted Return Rate by Product Type:")
for product_type, rate in product_return_rate.items():
    print(f"{product_type}: {rate:.2f}")

print("Predicted Return Rate by Product Type:")
for product_type, rate in product_return_rate.items():
    print(f"{product_type}: {rate:.2f}")

print("\nAnalysis of Predicted Return Rates:")
print("Based on the model's predictions, the return rates for different product types are as follows:")
for product_type, rate in product_return_rate.items():
    print(f"- {product_type}: {rate:.2f}")

# Discuss findings based on the printed rates
highest_return_type = max(product_return_rate, key=product_return_rate.get)
lowest_return_type = min(product_return_rate, key=product_return_rate.get)
print(f"\nThe product type with the highest predicted return likelihood is '{highest_return_type}' with a rate of {product_return_rate[highest_return_type]:.2f}.")
print(f"The product type(s) with the lowest predicted return likelihood are those with a rate of {product_return_rate[lowest_return_type]:.2f}. These include: {[pt for pt, rate in product_return_rate.items() if rate == product_return_rate[lowest_return_type]]}")